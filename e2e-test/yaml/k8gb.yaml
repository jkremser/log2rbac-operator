# generated by helm -n k8gb template k8gb ../../k8gb/chart/k8gb --set k8gb.deployRbac=false
---
apiVersion: v1
kind: Namespace
metadata:
  name: k8gb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8gb
  namespace: k8gb
---
# Source: k8gb/templates/crds/dns-endpoint-crd-manifest.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dnsendpoints.externaldns.k8s.io
  annotations:
    api-approved.kubernetes.io: "https://github.com/kubernetes-sigs/external-dns/pull/2007"
spec:
  group: externaldns.k8s.io
  names:
    kind: DNSEndpoint
    listKind: DNSEndpointList
    plural: dnsendpoints
    singular: dnsendpoint
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DNSEndpointSpec defines the desired state of DNSEndpoint
              properties:
                endpoints:
                  items:
                    description: Endpoint is a high-level way of a connection between a service and an IP
                    properties:
                      dnsName:
                        description: The hostname of the DNS record
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels stores labels defined for the Endpoint
                        type: object
                      providerSpecific:
                        description: ProviderSpecific stores provider specific config
                        items:
                          description: ProviderSpecificProperty holds the name and value of a configuration which is specific to individual DNS providers
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      recordTTL:
                        description: TTL for the record
                        format: int64
                        type: integer
                      recordType:
                        description: RecordType type of record, e.g. CNAME, A, SRV, TXT etc
                        type: string
                      setIdentifier:
                        description: Identifier to distinguish multiple records with the same name and type (e.g. Route53 records with routing policies other than 'simple')
                        type: string
                      targets:
                        description: The targets the DNS record points to
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
            status:
              description: DNSEndpointStatus defines the observed state of DNSEndpoint
              properties:
                observedGeneration:
                  description: The generation observed by the external-dns controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: k8gb/templates/crds/k8gb.absa.oss_gslbs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: gslbs.k8gb.absa.oss
spec:
  group: k8gb.absa.oss
  names:
    kind: Gslb
    listKind: GslbList
    plural: gslbs
    singular: gslb
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.strategy.type
          name: strategy
          type: string
        - jsonPath: .status.geoTag
          name: geoTag
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Gslb is the Schema for the gslbs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GslbSpec defines the desired state of Gslb
              properties:
                ingress:
                  description: Gslb-enabled Ingress Spec
                  properties:
                    backend:
                      description: A default backend capable of servicing requests that
                        don't match any rule. At least one of 'backend' or 'rules' must
                        be specified. This field is optional to allow the loadbalancer
                        controller or defaulting logic to specify a global default.
                      properties:
                        resource:
                          description: Resource is an ObjectRef to another Kubernetes
                            resource in the namespace of the Ingress object. If resource
                            is specified, serviceName and servicePort must not be specified.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource being
                                referenced. If APIGroup is not specified, the specified
                                Kind must be in the core API group. For any other third-party
                                types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        serviceName:
                          description: Specifies the name of the referenced service.
                          type: string
                        servicePort:
                          anyOf:
                            - type: integer
                            - type: string
                          description: Specifies the port of the referenced service.
                          x-kubernetes-int-or-string: true
                      type: object
                    ingressClassName:
                      description: IngressClassName is the name of the IngressClass
                        cluster resource. The associated IngressClass defines which
                        controller will implement the resource. This replaces the deprecated
                        `kubernetes.io/ingress.class` annotation. For backwards compatibility,
                        when that annotation is set, it must be given precedence over
                        this field. The controller may emit a warning if the field and
                        annotation have different values. Implementations of this API
                        should ignore Ingresses without a class specified. An IngressClass
                        resource may be marked as default, which can be used to set
                        a default value for this field. For more information, refer
                        to the IngressClass documentation.
                      type: string
                    rules:
                      description: A list of host rules used to configure the Ingress.
                        If unspecified, or no rule matches, all traffic is sent to the
                        default backend.
                      items:
                        description: IngressRule represents the rules mapping the paths
                          under a specified host to the related backend services. Incoming
                          requests are first evaluated for a host match, then routed
                          to the backend associated with the matching IngressRuleValue.
                        properties:
                          host:
                            description: "Host is the fully qualified domain name of
                            a network host, as defined by RFC 3986. Note the following
                            deviations from the \"host\" part of the URI as defined
                            in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue
                            can only apply to    the IP in the Spec of the parent
                            Ingress. 2. The `:` delimiter is not respected because
                            ports are not allowed. \t  Currently the port of an Ingress
                            is implicitly :80 for http and \t  :443 for https. Both
                            these may change in the future. Incoming requests are
                            matched against the host before the IngressRuleValue.
                            If the host is unspecified, the Ingress routes all traffic
                            based on the specified IngressRuleValue. \n Host can be
                            \"precise\" which is a domain name without the terminating
                            dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\",
                            which is a domain name prefixed with a single wildcard
                            label (e.g. \"*.foo.com\"). The wildcard character '*'
                            must appear by itself as the first DNS label and matches
                            only a single label. You cannot have a wildcard label
                            by itself (e.g. Host == \"*\"). Requests will be matched
                            against the Host field in the following way: 1. If Host
                            is precise, the request matches this rule if the http
                            host header is equal to Host. 2. If Host is a wildcard,
                            then the request matches this rule if the http host header
                            is to equal to the suffix (removing the first label) of
                            the wildcard rule."
                            type: string
                          http:
                            description: 'HTTPIngressRuleValue is a list of http selectors
                            pointing to backends. In the example: http://<host>/<path>?<searchpart>
                            -> backend where where parts of the url correspond to
                            RFC 3986, this resource will be used to match against
                            everything after the last ''/'' and before the first ''?''
                            or ''#''.'
                            properties:
                              paths:
                                description: A collection of paths that map requests
                                  to backends.
                                items:
                                  description: HTTPIngressPath associates a path with
                                    a backend. Incoming urls matching the path are forwarded
                                    to the backend.
                                  properties:
                                    backend:
                                      description: Backend defines the referenced service
                                        endpoint to which the traffic will be forwarded
                                        to.
                                      properties:
                                        resource:
                                          description: Resource is an ObjectRef to another
                                            Kubernetes resource in the namespace of
                                            the Ingress object. If resource is specified,
                                            serviceName and servicePort must not be
                                            specified.
                                          properties:
                                            apiGroup:
                                              description: APIGroup is the group for
                                                the resource being referenced. If APIGroup
                                                is not specified, the specified Kind
                                                must be in the core API group. For any
                                                other third-party types, APIGroup is
                                                required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                            - kind
                                            - name
                                          type: object
                                        serviceName:
                                          description: Specifies the name of the referenced
                                            service.
                                          type: string
                                        servicePort:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the port of the referenced
                                            service.
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    path:
                                      description: Path is matched against the path
                                        of an incoming request. Currently it can contain
                                        characters disallowed from the conventional
                                        "path" part of a URL as defined by RFC 3986.
                                        Paths must begin with a '/' and must be present
                                        when using PathType with value "Exact" or "Prefix".
                                      type: string
                                    pathType:
                                      description: 'PathType determines the interpretation
                                      of the Path matching. PathType can be one of
                                      the following values: * Exact: Matches the URL
                                      path exactly. * Prefix: Matches based on a URL
                                      path prefix split by ''/''. Matching is   done
                                      on a path element by element basis. A path element
                                      refers is the   list of labels in the path split
                                      by the ''/'' separator. A request is a   match
                                      for path p if every p is an element-wise prefix
                                      of p of the   request path. Note that if the
                                      last element of the path is a substring   of
                                      the last element in request path, it is not
                                      a match (e.g. /foo/bar   matches /foo/bar/baz,
                                      but does not match /foo/barbaz). * ImplementationSpecific:
                                      Interpretation of the Path matching is up to   the
                                      IngressClass. Implementations can treat this
                                      as a separate PathType   or treat it identically
                                      to Prefix or Exact path types. Implementations
                                      are required to support all path types. Defaults
                                      to ImplementationSpecific.'
                                      type: string
                                  required:
                                    - backend
                                  type: object
                                type: array
                            required:
                              - paths
                            type: object
                        required:
                          - http
                        type: object
                      type: array
                    tls:
                      description: TLS configuration. Currently the Ingress only supports
                        a single TLS port, 443. If multiple members of this list specify
                        different hosts, they will be multiplexed on the same port according
                        to the hostname specified through the SNI TLS extension, if
                        the ingress controller fulfilling the ingress supports SNI.
                      items:
                        description: IngressTLS describes the transport layer security
                          associated with an Ingress.
                        properties:
                          hosts:
                            description: Hosts are a list of hosts included in the TLS
                              certificate. The values in this list must match the name/s
                              used in the tlsSecret. Defaults to the wildcard host setting
                              for the loadbalancer controller fulfilling this Ingress,
                              if left unspecified.
                            items:
                              type: string
                            type: array
                          secretName:
                            description: SecretName is the name of the secret used to
                              terminate TLS traffic on port 443. Field is left optional
                              to allow TLS routing based on SNI hostname alone. If the
                              SNI host in a listener conflicts with the "Host" header
                              field used by an IngressRule, the SNI host is used for
                              termination and value of the Host header is used for routing.
                            type: string
                        type: object
                      type: array
                  type: object
                strategy:
                  description: Gslb Strategy spec
                  properties:
                    dnsTtlSeconds:
                      description: Defines DNS record TTL in seconds
                      type: integer
                    primaryGeoTag:
                      description: Primary Geo Tag. Valid for failover strategy only
                      type: string
                    splitBrainThresholdSeconds:
                      description: Split brain TXT record expiration in seconds
                      type: integer
                    type:
                      description: Load balancing strategy type:(roundRobin|failover)
                      type: string
                  required:
                    - type
                  type: object
              required:
                - ingress
                - strategy
              type: object
            status:
              description: GslbStatus defines the observed state of Gslb
              properties:
                geoTag:
                  description: Cluster Geo Tag
                  type: string
                healthyRecords:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Current Healthy DNS record structure
                  type: object
                serviceHealth:
                  additionalProperties:
                    type: string
                  description: Associated Service status
                  type: object
              required:
                - geoTag
                - healthyRecords
                - serviceHealth
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: k8gb/charts/coredns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8gb-coredns
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "k8gb"
    helm.sh/chart: "coredns-1.15.3"
    app.kubernetes.io/name: coredns
  annotations:
    {}
spec:
  selector:
    app.kubernetes.io/instance: "k8gb"
    app.kubernetes.io/name: coredns
  ports:
    - {port: 53, targetPort: 5353, protocol: UDP, name: udp-5353}
  type: ClusterIP
---
# Source: k8gb/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8gb
  namespace: k8gb
  labels:
    helm.sh/chart: k8gb-v0.8.7
    app.kubernetes.io/name: k8gb
    app.kubernetes.io/instance: k8gb
    app.kubernetes.io/version: "v0.8.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: k8gb
  template:
    metadata:
      labels:
        name: k8gb
    spec:
      serviceAccountName: k8gb
      containers:
        - name: k8gb
          ports:
            - containerPort: 8080
          image: absaoss/k8gb:v0.8.7
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            requests:
              memory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "k8gb"
            - name: CLUSTER_GEO_TAG
              value: "eu"
            - name: EXT_GSLB_CLUSTERS_GEO_TAGS
              value: "us"
            - name: EDGE_DNS_ZONE
              value: example.com
            - name: EDGE_DNS_SERVERS
              value: 1.1.1.1
            - name: DNS_ZONE
              value: cloud.example.com
            - name: RECONCILE_REQUEUE_SECONDS
              value: "30"
            - name: LOG_FORMAT
              value: "simple"
            - name: LOG_LEVEL
              value: "info"
            - name: NO_COLOR
              value: "true"
            - name: SPLIT_BRAIN_CHECK
              value: "false"
            - name: METRICS_ADDRESS
              value: 0.0.0.0:8080
---


# make sure if the release is done using PR, the squash or rebase is used (not merge commit)
name: Release tagging

on:
  push:
    branches:
      - 'master'
    paths:
      - 'kubectl-plugin/VERSION'

jobs:
  cut_release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          fetch-depth: 0
      - name: Get Desired Tag
        id: get_desired_tag
        run: |
          tag=v$(cat kubectl-plugin/VERSION)
          echo "Version to release: ${tag}"
          echo "::set-output name=tag::${tag}"
      - name: Push Tag
        if: startsWith(github.event.head_commit.message, 'RELEASE:') || startsWith(github.event.commits[0].message, 'RELEASE:')
        uses: mathieudutour/github-tag-action@d745f2e74aaf1ee82e747b181f7a0967978abee0 # tag=v6.0
        with:
          github_token: ${{ secrets.RELEASER_TOKEN }}
          create_annotated_tag: true
          tag_prefix: ""
          custom_tag: ${{ steps.get_desired_tag.outputs.tag }}
      - name: Get Current Tag
        if: startsWith(github.event.head_commit.message, 'Revert "RELEASE:') || startsWith(github.event.commits[0].message, 'Revert "RELEASE:')
        id: get_current_tag
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo "Version to revert: ${tag}"
          echo "::set-output name=tag::${tag}"
      - name: Get Previous Tag
        if: startsWith(github.event.head_commit.message, 'Revert "RELEASE:') || startsWith(github.event.commits[0].message, 'Revert "RELEASE:')
        id: get_previous_tag
        run: |
          tag=$(git describe --tags --abbrev=0 $(git describe --tags --abbrev=0)^)
          echo "Previous tag: ${tag}"
          echo "::set-output name=tag::${tag}"
      - name: Delete Tag and Release
        if: startsWith(github.event.head_commit.message, 'Revert "RELEASE:') && steps.get_desired_tag.outputs.tag == steps.get_previous_tag.outputs.tag
        uses: dev-drprasad/delete-tag-and-release@085c6969f18bad0de1b9f3fe6692a3cd01f64fe5 # tag=v0.2.0
        with:
          delete_release: true # default: false
          tag_name: ${{ steps.get_current_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASER_TOKEN }}
